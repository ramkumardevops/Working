apiVersion: apps/v1
kind: Deployment
metadata:
  name: planet9
spec:
  replicas: 2
  selector:
    matchLabels:
      app: planet9
  template:
    metadata:
      labels:
        app: planet9
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: planet9
        image: neptunesoftware/planet9
        resources:
          requests:
            cpu: 1000m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 1Gi
        ports:
        - containerPort: 8080
          name: planet9
        volumeMounts:
          - mountPath: "/home/planet9/customnpm"
            name: planet9-npm-storage
      volumes:
      - name: planet9-npm-storage
        persistentVolumeClaim:
          claimName: pvc-nfs-pv1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nfs-pv1
  labels:
    app: planet9
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: manual
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-pv1
  labels:
    app: planet9
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: manual
  capacity:
      storage: 5Gi
  nfs:
    path: "/mnt/nfs_share"
    server: 54.157.249.214
---
apiVersion: v1
kind: Service
metadata:
  name: planet9-svc
spec:
  selector:
    app: planet9
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 32100
