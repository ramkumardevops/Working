#Create k8s rbac role & Service Account for ALB Ingress Controller, for that we will create three objects in k8s. Refer file ALBIngress-rbac-roles.yml for more details.
#ClusterRole
#ServiceAccount
#ClusterRoleBinding
#Create IAM Policy with access to AWS Services (EC2, ELB, IAM, Cognito, WAF, Shield, Certificate Manager etc - All AWS Services in relation with AWS Application Load Balancer)
#Associate the k8s service account, AWS IAM Policy by creating a AWS IAM Role
#Finally deploy ALB Ingress Controller and Test if that respective POD is finally running
#Create a Kubernetes service account named alb-ingress-controller in the kube-system namespace
#kubectl get sa -n kube-system
#kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/master/docs/examples/rbac-role.yaml
#kubectl get sa -n kube-system
#Create an IAM role for the ALB Ingress Controller and attach the role to the service account
#eksctl create iamserviceaccount --region us-east-1 --name alb-ingress-controller --namespace kube-system --cluster eks-planet9 --attach-policy-arn arn:aws:iam::335956887599:policy/ALBIngressControllerIAMPolicy --override-existing-serviceaccounts --approve
#eksctl  get iamserviceaccount --cluster eks-planet9
#kubectl describe sa alb-ingress-controller -n kube-system
# Deploy ALB Ingress Controller
#kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/master/docs/examples/alb-ingress-controller.yaml
# Verify Deployment
#kubectl get deploy -n kube-system
#Edit ALB Ingress Controller manifest and add clustername field - --cluster-name=eksdemo1
#kubectl edit deployment.apps/alb-ingress-controller -n kube-system
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-planet9-service
  labels:
    app: planet9
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: planet9-svc
              servicePort: 8080